#include <qtffmpeg.h>

typedef struct           {
  int          codec     ;
  const char * extension ;
} AudioExt               ;

AudioExt EXTs [ ] =                          {
  { AV_CODEC_ID_PCM_S16LE         , "pcm"  } ,
  { AV_CODEC_ID_PCM_S16BE         , "pcm"  } ,
  { AV_CODEC_ID_PCM_U16LE         , "pcm"  } ,
  { AV_CODEC_ID_PCM_U16BE         , "pcm"  } ,
  { AV_CODEC_ID_PCM_S8            , "pcm"  } ,
  { AV_CODEC_ID_PCM_U8            , "pcm"  } ,
  { AV_CODEC_ID_PCM_MULAW         , "pcm"  } ,
  { AV_CODEC_ID_PCM_ALAW          , "pcm"  } ,
  { AV_CODEC_ID_PCM_S32LE         , "pcm"  } ,
  { AV_CODEC_ID_PCM_S32BE         , "pcm"  } ,
  { AV_CODEC_ID_PCM_U32LE         , "pcm"  } ,
  { AV_CODEC_ID_PCM_U32BE         , "pcm"  } ,
  { AV_CODEC_ID_PCM_S24LE         , "pcm"  } ,
  { AV_CODEC_ID_PCM_S24BE         , "pcm"  } ,
  { AV_CODEC_ID_PCM_U24LE         , "pcm"  } ,
  { AV_CODEC_ID_PCM_U24BE         , "pcm"  } ,
  { AV_CODEC_ID_PCM_S24DAUD       , "pcm"  } ,
  { AV_CODEC_ID_PCM_ZORK          , "pcm"  } ,
  { AV_CODEC_ID_PCM_S16LE_PLANAR  , "pcm"  } ,
  { AV_CODEC_ID_PCM_DVD           , "pcm"  } ,
  { AV_CODEC_ID_PCM_F32BE         , "pcm"  } ,
  { AV_CODEC_ID_PCM_F32LE         , "pcm"  } ,
  { AV_CODEC_ID_PCM_F64BE         , "pcm"  } ,
  { AV_CODEC_ID_PCM_F64LE         , "pcm"  } ,
  { AV_CODEC_ID_PCM_BLURAY        , "pcm"  } ,
  { AV_CODEC_ID_PCM_LXF           , "pcm"  } ,
  { AV_CODEC_ID_PCM_S8_PLANAR     , "pcm"  } ,
  { AV_CODEC_ID_PCM_S24LE_PLANAR  , "pcm"  } ,
  { AV_CODEC_ID_PCM_S32LE_PLANAR  , "pcm"  } ,
  { AV_CODEC_ID_PCM_S16BE_PLANAR  , "pcm"  } ,
  { AV_CODEC_ID_ADPCM_IMA_QT      , "wav"  } ,
  { AV_CODEC_ID_ADPCM_IMA_WAV     , "wav"  } ,
  { AV_CODEC_ID_ADPCM_IMA_DK3     , "wav"  } ,
  { AV_CODEC_ID_ADPCM_IMA_DK4     , "wav"  } ,
  { AV_CODEC_ID_ADPCM_IMA_WS      , "wav"  } ,
  { AV_CODEC_ID_ADPCM_IMA_SMJPEG  , "wav"  } ,
  { AV_CODEC_ID_ADPCM_MS          , "wav"  } ,
  { AV_CODEC_ID_ADPCM_4XM         , "wav"  } ,
  { AV_CODEC_ID_ADPCM_XA          , "wav"  } ,
  { AV_CODEC_ID_ADPCM_ADX         , "wav"  } ,
  { AV_CODEC_ID_ADPCM_EA          , "wav"  } ,
  { AV_CODEC_ID_ADPCM_G726        , "wav"  } ,
  { AV_CODEC_ID_ADPCM_CT          , "wav"  } ,
  { AV_CODEC_ID_ADPCM_SWF         , "wav"  } ,
  { AV_CODEC_ID_ADPCM_YAMAHA      , "wav"  } ,
  { AV_CODEC_ID_ADPCM_SBPRO_4     , "wav"  } ,
  { AV_CODEC_ID_ADPCM_SBPRO_3     , "wav"  } ,
  { AV_CODEC_ID_ADPCM_SBPRO_2     , "wav"  } ,
  { AV_CODEC_ID_ADPCM_THP         , "wav"  } ,
  { AV_CODEC_ID_ADPCM_IMA_AMV     , "wav"  } ,
  { AV_CODEC_ID_ADPCM_EA_R1       , "wav"  } ,
  { AV_CODEC_ID_ADPCM_EA_R3       , "wav"  } ,
  { AV_CODEC_ID_ADPCM_EA_R2       , "wav"  } ,
  { AV_CODEC_ID_ADPCM_IMA_EA_SEAD , "wav"  } ,
  { AV_CODEC_ID_ADPCM_IMA_EA_EACS , "wav"  } ,
  { AV_CODEC_ID_ADPCM_EA_XAS      , "wav"  } ,
  { AV_CODEC_ID_ADPCM_EA_MAXIS_XA , "wav"  } ,
  { AV_CODEC_ID_ADPCM_IMA_ISS     , "wav"  } ,
  { AV_CODEC_ID_ADPCM_G722        , "wav"  } ,
  { AV_CODEC_ID_ADPCM_IMA_APC     , "wav"  } ,
  { AV_CODEC_ID_ADPCM_VIMA        , "wav"  } ,
  { AV_CODEC_ID_ADPCM_AFC         , "wav"  } ,
  { AV_CODEC_ID_ADPCM_IMA_OKI     , "wav"  } ,
  { AV_CODEC_ID_ADPCM_DTK         , "wav"  } ,
  { AV_CODEC_ID_ADPCM_IMA_RAD     , "wav"  } ,
  { AV_CODEC_ID_ADPCM_G726LE      , "wav"  } ,
  { AV_CODEC_ID_ADPCM_THP_LE      , "wav"  } ,
  { AV_CODEC_ID_ADPCM_PSX         , "wav"  } ,
  { AV_CODEC_ID_ADPCM_AICA        , "wav"  } ,
  { AV_CODEC_ID_ADPCM_IMA_DAT4    , "wav"  } ,
  { AV_CODEC_ID_S302M             , ""     } ,
  { AV_CODEC_ID_AMR_NB            , "amr"  } ,
  { AV_CODEC_ID_AMR_WB            , "amr"  } ,
  { AV_CODEC_ID_RA_144            , "ra"   } ,
  { AV_CODEC_ID_RA_288            , "ra"   } ,
  { AV_CODEC_ID_ROQ_DPCM          , ""     } ,
  { AV_CODEC_ID_INTERPLAY_DPCM    , ""     } ,
  { AV_CODEC_ID_XAN_DPCM          , ""     } ,
  { AV_CODEC_ID_SOL_DPCM          , ""     } ,
  { AV_CODEC_ID_SDX2_DPCM         , ""     } ,
  { AV_CODEC_ID_MP2               , "mp2"  } ,
  { AV_CODEC_ID_MP3               , "mp3"  } ,
  { AV_CODEC_ID_AAC               , "aac"  } ,
  { AV_CODEC_ID_AC3               , "ac3"  } ,
  { AV_CODEC_ID_DTS               , ""     } ,
  { AV_CODEC_ID_VORBIS            , ""     } ,
  { AV_CODEC_ID_DVAUDIO           , ""     } ,
  { AV_CODEC_ID_WMAV1             , "wma"  } ,
  { AV_CODEC_ID_WMAV2             , "wma"  } ,
  { AV_CODEC_ID_MACE3             , ""     } ,
  { AV_CODEC_ID_MACE6             , ""     } ,
  { AV_CODEC_ID_VMDAUDIO          , ""     } ,
  { AV_CODEC_ID_FLAC              , "flac" } ,
  { AV_CODEC_ID_MP3ADU            , "mp3"  } ,
  { AV_CODEC_ID_MP3ON4            , "mp3"  } ,
  { AV_CODEC_ID_SHORTEN           , ""     } ,
  { AV_CODEC_ID_ALAC              , "alac" } ,
  { AV_CODEC_ID_WESTWOOD_SND1     , ""     } ,
  { AV_CODEC_ID_GSM               , "gsm"  } ,
  { AV_CODEC_ID_QDM2              , ""     } ,
  { AV_CODEC_ID_COOK              , ""     } ,
  { AV_CODEC_ID_TRUESPEECH        , ""     } ,
  { AV_CODEC_ID_TTA               , "tta"  } ,
  { AV_CODEC_ID_SMACKAUDIO        , ""     } ,
  { AV_CODEC_ID_QCELP             , ""     } ,
  { AV_CODEC_ID_WAVPACK           , ""     } ,
  { AV_CODEC_ID_DSICINAUDIO       , ""     } ,
  { AV_CODEC_ID_IMC               , ""     } ,
  { AV_CODEC_ID_MUSEPACK7         , ""     } ,
  { AV_CODEC_ID_MLP               , ""     } ,
  { AV_CODEC_ID_GSM_MS            , ""     } ,
  { AV_CODEC_ID_ATRAC3            , ""     } ,
  { AV_CODEC_ID_VOXWARE           , "vox"  } ,
  { AV_CODEC_ID_APE               , "ape"  } ,
  { AV_CODEC_ID_NELLYMOSER        , ""     } ,
  { AV_CODEC_ID_MUSEPACK8         , ""     } ,
  { AV_CODEC_ID_SPEEX             , ""     } ,
  { AV_CODEC_ID_WMAVOICE          , ""     } ,
  { AV_CODEC_ID_WMAPRO            , ""     } ,
  { AV_CODEC_ID_WMALOSSLESS       , ""     } ,
  { AV_CODEC_ID_ATRAC3P           , ""     } ,
  { AV_CODEC_ID_EAC3              , ""     } ,
  { AV_CODEC_ID_SIPR              , ""     } ,
  { AV_CODEC_ID_MP1               , "mp1"  } ,
  { AV_CODEC_ID_TWINVQ            , ""     } ,
  { AV_CODEC_ID_TRUEHD            , ""     } ,
  { AV_CODEC_ID_MP4ALS            , ""     } ,
  { AV_CODEC_ID_ATRAC1            , ""     } ,
  { AV_CODEC_ID_BINKAUDIO_RDFT    , ""     } ,
  { AV_CODEC_ID_BINKAUDIO_DCT     , ""     } ,
  { AV_CODEC_ID_AAC_LATM          , ""     } ,
  { AV_CODEC_ID_QDMC              , ""     } ,
  { AV_CODEC_ID_CELT              , ""     } ,
  { AV_CODEC_ID_G723_1            , ""     } ,
  { AV_CODEC_ID_G729              , ""     } ,
  { AV_CODEC_ID_8SVX_EXP          , ""     } ,
  { AV_CODEC_ID_8SVX_FIB          , ""     } ,
  { AV_CODEC_ID_BMV_AUDIO         , ""     } ,
  { AV_CODEC_ID_RALF              , ""     } ,
  { AV_CODEC_ID_IAC               , ""     } ,
  { AV_CODEC_ID_ILBC              , ""     } ,
  { AV_CODEC_ID_METASOUND         , ""     } ,
  { AV_CODEC_ID_FFWAVESYNTH       , ""     } ,
  { AV_CODEC_ID_SONIC             , ""     } ,
  { AV_CODEC_ID_SONIC_LS          , ""     } ,
  { AV_CODEC_ID_PAF_AUDIO         , ""     } ,
  { AV_CODEC_ID_OPUS              , ""     } ,
  { AV_CODEC_ID_TAK               , ""     } ,
  { AV_CODEC_ID_EVRC              , ""     } ,
  { AV_CODEC_ID_SMV               , ""     } ,
  { AV_CODEC_ID_COMFORT_NOISE     , ""     } ,
  { AV_CODEC_ID_ON2AVC            , ""     } ,
  { AV_CODEC_ID_DSS_SP            , ""     } ,
  { AV_CODEC_ID_DSD_LSBF          , ""     } ,
  { AV_CODEC_ID_DSD_MSBF          , ""     } ,
  { AV_CODEC_ID_DSD_LSBF_PLANAR   , ""     } ,
  { AV_CODEC_ID_DSD_MSBF_PLANAR   , ""     } ,
  { AV_CODEC_ID_4GV               , ""     } ,
  { AV_CODEC_ID_INTERPLAY_ACM     , ""     } ,
  { AV_CODEC_ID_XMA1              , ""     } ,
  { AV_CODEC_ID_XMA2              , ""     } ,
  { 0                             , NULL   }
}                                            ;

QStringList FFmpeg::AudioExtensions(void)
{
  QStringList S                                      ;
  AudioExt  * e = EXTs                               ;
  while ( 0 != e -> codec )                          {
    QString s = QString::fromUtf8 ( e -> extension ) ;
    if ( s . length ( ) > 0 )                        {
      if ( ! S . contains ( s ) ) S << s             ;
    }                                                ;
    e ++                                             ;
  }                                                  ;
  return S                                           ;
}
